"""users plus all sm tables

Revision ID: 8ffc6ee799a7
Revises: 
Create Date: 2023-05-26 17:14:41.081000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8ffc6ee799a7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sm_post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=64), nullable=True),
    sa.Column('timeline_id', sa.String(length=64), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('mood', sa.String(length=64), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('ldate', sa.DateTime(), nullable=True),
    sa.Column('question', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sm_post'))
    )
    with op.batch_alter_table('sm_post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sm_post_post_id'), ['post_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_sm_post_timeline_id'), ['timeline_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sm_post_user_id'), ['user_id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('sm_annotation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('escalation', 'switch', name='annotationtype'), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('id_sm_post', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_sm_post'], ['sm_post.id'], name=op.f('fk_sm_annotation_id_sm_post_sm_post')),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], name=op.f('fk_sm_annotation_id_user_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sm_annotation'))
    )
    with op.batch_alter_table('sm_annotation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sm_annotation_timestamp'), ['timestamp'], unique=False)

    op.create_table('sm_reply',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reply_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.String(length=64), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('ldate', sa.DateTime(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id_sm_post', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_sm_post'], ['sm_post.id'], name=op.f('fk_sm_reply_id_sm_post_sm_post')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sm_reply'))
    )
    with op.batch_alter_table('sm_reply', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sm_reply_reply_id'), ['reply_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_sm_reply_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sm_reply', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sm_reply_user_id'))
        batch_op.drop_index(batch_op.f('ix_sm_reply_reply_id'))

    op.drop_table('sm_reply')
    with op.batch_alter_table('sm_annotation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sm_annotation_timestamp'))

    op.drop_table('sm_annotation')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('sm_post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sm_post_user_id'))
        batch_op.drop_index(batch_op.f('ix_sm_post_timeline_id'))
        batch_op.drop_index(batch_op.f('ix_sm_post_post_id'))

    op.drop_table('sm_post')
    # ### end Alembic commands ###
