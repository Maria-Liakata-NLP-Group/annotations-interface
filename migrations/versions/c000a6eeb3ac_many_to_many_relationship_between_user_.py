"""many-to-many relationship between user and dataset

Revision ID: c000a6eeb3ac
Revises: 50c55d1e3c11
Create Date: 2023-06-26 16:37:26.692164

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c000a6eeb3ac'
down_revision = '50c55d1e3c11'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset_annotator',
    sa.Column('id_dataset', sa.Integer(), nullable=True),
    sa.Column('id_annotator', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_annotator'], ['user.id'], name=op.f('fk_dataset_annotator_id_annotator_user')),
    sa.ForeignKeyConstraint(['id_dataset'], ['dataset.id'], name=op.f('fk_dataset_annotator_id_dataset_dataset'))
    )
    with op.batch_alter_table('dataset', schema=None) as batch_op:
        batch_op.drop_constraint('fk_dataset_id_annotator_user', type_='foreignkey')
        batch_op.drop_column('id_annotator')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dataset', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_annotator', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_dataset_id_annotator_user', 'user', ['id_annotator'], ['id'])

    op.drop_table('dataset_annotator')
    # ### end Alembic commands ###
